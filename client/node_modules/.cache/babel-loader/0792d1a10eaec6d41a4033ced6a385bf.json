{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanya\\\\Desktop\\\\react2\\\\expenses\\\\client\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; //create context\n\nexport const GlobalContext = createContext(initialState); //provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //actions \n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      //fetches transactions from the backend(axios)\n      const res = await axios.post(\"/api/v1/transactions\", transaction, config);\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/sanya/Desktop/react2/expenses/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,YAAY,EAAC,EADE;AAEfC,EAAAA,KAAK,EAAC,IAFS;AAGfC,EAAAA,OAAO,EAAC;AAHO,CAAnB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAACR,aAAa,CAACI,YAAD,CAAjC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACxC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBX,UAAU,CAACC,UAAD,EAAYE,YAAZ,CAAjC,CADwC,CAExC;;AAGA,iBAAeS,eAAf,GAAiC;AAC7B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMnB,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOH,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AACzC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACA;AACF,YAAMb,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAW,sBAAX,EAAmCH,WAAnC,EAAgDC,MAAhD,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACAP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACF;;AAGH,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCD,MAAAA,YAAY,EAACM,KAAK,CAACN,YADgB;AAEnCC,MAAAA,KAAK,EAACK,KAAK,CAACL,KAFuB;AAGnCC,MAAAA,OAAO,EAACI,KAAK,CAACJ,OAHqB;AAInCM,MAAAA,eAJmC;AAKnCQ,MAAAA,iBALmC;AAMnCG,MAAAA;AANmC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASHd,QATG,CAAR;AAWH,CArEM","sourcesContent":["import React, {createContext,useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n//initial state\r\nconst initialState={\r\n    transactions:[],\r\n    error:null,\r\n    loading:true\r\n}\r\n\r\n//create context\r\nexport const GlobalContext=createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider=({children}) => {\r\n    const [state,dispatch]=useReducer(AppReducer,initialState);\r\n    //actions \r\n\r\n    \r\n    async function getTransactions() {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/transactions\");\r\n          dispatch({\r\n            type: \"GET_TRANSACTIONS\",\r\n            payload: res.data.data\r\n          });\r\n        } catch (err) {\r\n          dispatch({\r\n            type: \"TRANSACTION_ERROR\",\r\n            payload: err.response.data.error\r\n          });\r\n        }\r\n      }\r\n    \r\n      async function deleteTransaction(id) {\r\n        try {\r\n          await axios.delete(`/api/v1/transactions/${id}`);\r\n          dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload: id\r\n          });\r\n        } catch (err) {\r\n          dispatch({\r\n            type: \"TRANSACTION_ERROR\",\r\n            payload: err.response.data.error\r\n          });\r\n        }\r\n      }\r\n    \r\n      async function addTransaction(transaction) {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        };\r\n        try {\r\n            //fetches transactions from the backend(axios)\r\n          const res = await axios.post(\"/api/v1/transactions\", transaction, config);\r\n          dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: res.data.data\r\n          });\r\n        } catch (err) {\r\n          console.log(err);\r\n          dispatch({\r\n            type: \"TRANSACTION_ERROR\",\r\n            payload: err.response.data.error\r\n          });\r\n        }\r\n      }\r\n    \r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions:state.transactions,\r\n        error:state.error,\r\n        loading:state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}